{"version":3,"sources":["hooks/useFetch.tsx","hooks/useToUpperCaseFirstLetter.tsx","components/MUIBackdrop.tsx","components/PokemonCard.tsx","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","pages/HomePage.tsx"],"names":["useFetch","url","useState","data","setData","isLoading","setIsLoading","error","setError","useEffect","isMounted","a","Axios","get","response","fetchData","useToUpperCaseFirstLetter","string","length","charAt","toUpperCase","slice","useStyles","makeStyles","theme","backdrop","zIndex","MUIBackdrop","open","classes","className","color","imageStyles","height","objectFit","elementalTypesButton","margin","PokemonCard","push","useHistory","fetchedData","upperCaseFirstLetter","xs","sm","lg","item","variant","width","onClick","id","component","image","sprites","other","front_default","title","name","container","justify","gutterBottom","types","map","type","Card","React","props","ref","_props$raised","raised","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","CardContent","_props$component","Component","padding","paddingBottom","Skeleton","_props$animation","animation","_props$variant","hasChildren","Boolean","children","withChildren","fitContent","heightAuto","style","display","backgroundColor","fade","palette","text","primary","marginTop","marginBottom","transformOrigin","transform","borderRadius","shape","content","rect","circle","pulse","opacity","wave","position","background","concat","action","hover","bottom","left","right","top","visibility","maxWidth","CardActionArea","focusVisibleClassName","ButtonBase","focusVisible","focusHighlight","textAlign","hoverOpacity","pointerEvents","transition","transitions","create","duration","short","MEDIA_COMPONENTS","CardMedia","src","isMediaComponent","indexOf","composedStyle","backgroundImage","media","img","undefined","backgroundSize","backgroundRepeat","backgroundPosition","typographyStyles","pokemonCardStyles","pageContainerStyles","HomePage","paragraph","spacing","results","size"],"mappings":"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","file":"static/js/6.d0d85e95.chunk.js","sourcesContent":["import Axios from 'axios'\nimport { useState, useEffect } from 'react'\n\nconst useFetch = <T,>(url: string) => {\n  const [data, setData] = useState<T | null>(null)\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState()\n\n  useEffect(() => {\n    let isMounted = true\n    setIsLoading(true)\n    const fetchData = async () => {\n      try {\n        const { data } = await Axios.get(url)\n        if (isMounted) {\n          setIsLoading(false)\n          setData(data)\n        }\n      } catch (err) {\n        setIsLoading(false)\n        setError(err.response.data)\n      }\n    }\n\n    fetchData()\n\n    return () => {\n      isMounted = false\n    }\n  }, [url])\n\n  return { data, isLoading, error }\n}\n\nexport default useFetch\n","const useToUpperCaseFirstLetter = () => {\n  const upperCaseFirstLetter = (string: string): string => {\n    if (string !== null && string.length > 0) {\n      return `${string.charAt(0).toUpperCase()}${string.slice(1)}`\n    }\n    return ''\n  }\n\n  return upperCaseFirstLetter\n}\n\nexport default useToUpperCaseFirstLetter\n","import React from 'react'\nimport { Backdrop, CircularProgress, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: 999,\n  },\n}))\n\nconst MUIBackdrop: React.FC<{ open: boolean }> = ({ open }) => {\n  const classes = useStyles()\n\n  return (\n    <Backdrop className={classes.backdrop} open={open}>\n      <CircularProgress color='secondary' />\n    </Backdrop>\n  )\n}\n\nexport default MUIBackdrop\n","import React from 'react'\nimport {\n  Grid,\n  makeStyles,\n  Typography,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Button,\n} from '@material-ui/core'\n\nimport { useHistory } from 'react-router'\nimport useFetch from '../hooks/useFetch'\n\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport useToUpperCaseFirstLetter from '../hooks/useToUpperCaseFirstLetter'\n\nconst useStyles = makeStyles({\n  imageStyles: {\n    height: 200,\n    objectFit: 'contain',\n  },\n  elementalTypesButton: {\n    margin: '20px 0',\n  },\n})\n\ninterface FetchData {\n  name: string\n  sprites: {\n    other: {\n      'official-artwork': {\n        front_default: string\n      }\n    }\n  }\n  types: [\n    {\n      type: {\n        name: string\n      }\n    }\n  ]\n  id: number\n}\n\ninterface Props {\n  data: {\n    url: string\n  }\n}\n\nconst PokemonCard: React.FC<Props> = ({ data }) => {\n  const classes = useStyles()\n  const { push } = useHistory()\n\n  const { data: fetchedData, isLoading, error } = useFetch<FetchData>(data.url)\n\n  const upperCaseFirstLetter = useToUpperCaseFirstLetter()\n\n  if (error) {\n    return (\n      <Grid xs={12} sm={6} lg={3} item>\n        <Card>\n          <CardContent>\n            <Typography variant='h5'>Error during loading Pokemon, Try Again!</Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    )\n  }\n\n  return (\n    <Grid item xs={12} sm={6} lg={3}>\n      {isLoading ? (\n        <div>\n          <Skeleton variant='text' />\n          <Skeleton variant='circle' width={40} height={40} />\n          <Skeleton variant='rect' width={210} height={118} />\n        </div>\n      ) : (\n        fetchedData !== null && (\n          <Card>\n            <CardActionArea onClick={() => push(`/pokemon/${fetchedData.id}`)}>\n              <CardMedia\n                className={classes.imageStyles}\n                component='img'\n                image={fetchedData.sprites.other['official-artwork'].front_default}\n                title={upperCaseFirstLetter(fetchedData.name)}\n              />\n              <CardContent>\n                <Grid container justify='space-around'>\n                  <Typography gutterBottom variant='h5' component='h2'>\n                    {upperCaseFirstLetter(fetchedData.name)}\n                  </Typography>\n                  <Typography gutterBottom variant='h5' component='h2'>\n                    #{fetchedData.id}\n                  </Typography>\n                </Grid>\n              </CardContent>\n            </CardActionArea>\n\n            <Grid justify='space-around' container>\n              {fetchedData.types.map((item) => (\n                <Button\n                  className={classes.elementalTypesButton}\n                  variant='contained'\n                  color='secondary'\n                  key={item.type.name}\n                >\n                  {item.type.name}\n                </Button>\n              ))}\n            </Grid>\n          </Card>\n        )\n      )}\n    </Grid>\n  )\n}\n\nexport default PokemonCard\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { fade, withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import React from 'react'\nimport { Grid, makeStyles, Typography, Button } from '@material-ui/core'\n\nimport useFetch from '../hooks/useFetch'\n\nimport PokemonCard from '../components/PokemonCard'\nimport MUIBackdrop from '../components/MUIBackdrop'\nimport { useHistory } from 'react-router'\n\nconst useStyles = makeStyles({\n  typographyStyles: {\n    marginTop: '30px',\n  },\n  pokemonCardStyles: {\n    marginTop: '20px',\n    padding: '20px',\n  },\n  pageContainerStyles: {\n    margin: '20px auto',\n    padding: '0 20px',\n    textAlign: 'center',\n  },\n})\n\ninterface FetchData {\n  results: [\n    {\n      name: string\n      url: string\n    }\n  ]\n}\n\nconst HomePage = () => {\n  const classes = useStyles()\n  const { push } = useHistory()\n\n  const { data, isLoading, error } = useFetch<FetchData>(\n    `https://pokeapi.co/api/v2/pokemon/?limit=8`\n  )\n\n  return (\n    <>\n      <Grid className={classes.pageContainerStyles} justify='center' container>\n        <Grid xs={12} item>\n          <Typography color='secondary' className={classes.typographyStyles} variant='h3'>\n            Check each of Pokemon!\n          </Typography>\n        </Grid>\n\n        <Grid xs={12} item>\n          <Typography className={classes.typographyStyles} paragraph>\n            This simple page is made for fans of Pokemon. There You can check Your favorites\n            Pokemon, their types, id of Pokedex and more!\n          </Typography>\n        </Grid>\n\n        {isLoading && <MUIBackdrop open={isLoading} />}\n\n        {error && (\n          <Grid justify='center' container>\n            <Typography variant='h3'>Error during loading Pokemons</Typography>\n          </Grid>\n        )}\n\n        <Grid className={classes.pokemonCardStyles} spacing={1} justify='center' container>\n          {!isLoading &&\n            data !== null &&\n            data.results.map((item) => <PokemonCard data={item} key={item.name} />)}\n        </Grid>\n\n        <Button variant='outlined' color='secondary' onClick={() => push('/pokemon')} size='large'>\n          Search for Pokemon\n        </Button>\n      </Grid>\n    </>\n  )\n}\n\nexport default HomePage\n"],"sourceRoot":""}