{"version":3,"sources":["hooks/useFetch.tsx","hooks/useToUpperCaseFirstLetter.tsx","components/MUIBackdrop.tsx","components/Chart.tsx","components/PokemonStats.tsx","pages/SinglePokemonPage.tsx"],"names":["useFetch","url","useState","data","setData","isLoading","setIsLoading","error","setError","useEffect","isMounted","a","Axios","get","response","fetchData","useToUpperCaseFirstLetter","string","length","charAt","toUpperCase","slice","useStyles","makeStyles","theme","backdrop","zIndex","MUIBackdrop","open","classes","className","color","Chart","stats","name","base_stat","width","height","margin","top","right","left","bottom","barSize","dataKey","scale","padding","strokeDasharray","fill","background","componentWrapper","maxHeight","backgroundColor","palette","primary","main","borderRadius","headerStyles","PokemonStats","value","weight","abilities","habitat","upperCaseFirstLetter","Grid","item","container","map","xs","Typography","align","variant","pageWrapperStyles","maxWidth","breakpoints","up","imageStyles","marginTop","marginBottom","buttonStyles","SinglePokemonPage","id","useParams","push","useHistory","speciesData","direction","alignItems","justify","gutterBottom","md","src","sprites","other","front_default","imageStyle","sm","flavor_text_entries","flavor_text","ability","Button","size","onClick"],"mappings":"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","file":"static/js/8.5a73b88c.chunk.js","sourcesContent":["import Axios from 'axios'\nimport { useState, useEffect } from 'react'\n\nconst useFetch = <T,>(url: string) => {\n  const [data, setData] = useState<T | null>(null)\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState()\n\n  useEffect(() => {\n    let isMounted = true\n    setIsLoading(true)\n    const fetchData = async () => {\n      try {\n        const { data } = await Axios.get(url)\n        if (isMounted) {\n          setIsLoading(false)\n          setData(data)\n        }\n      } catch (err) {\n        setIsLoading(false)\n        setError(err.response.data)\n      }\n    }\n\n    fetchData()\n\n    return () => {\n      isMounted = false\n    }\n  }, [url])\n\n  return { data, isLoading, error }\n}\n\nexport default useFetch\n","const useToUpperCaseFirstLetter = () => {\n  const upperCaseFirstLetter = (string: string): string => {\n    if (string !== null && string.length > 0) {\n      return `${string.charAt(0).toUpperCase()}${string.slice(1)}`\n    }\n    return ''\n  }\n\n  return upperCaseFirstLetter\n}\n\nexport default useToUpperCaseFirstLetter\n","import React from 'react'\nimport { Backdrop, CircularProgress, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: 999,\n  },\n}))\n\nconst MUIBackdrop: React.FC<{ open: boolean }> = ({ open }) => {\n  const classes = useStyles()\n\n  return (\n    <Backdrop className={classes.backdrop} open={open}>\n      <CircularProgress color='secondary' />\n    </Backdrop>\n  )\n}\n\nexport default MUIBackdrop\n","import React from 'react'\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts'\n\ninterface Props {\n  stats: Array<{\n    base_stat: number\n  }>\n}\n\nconst Chart: React.FC<Props> = ({ stats }) => {\n  const data = [\n    {\n      name: 'HP',\n      data: stats[0].base_stat,\n    },\n    {\n      name: 'Attack',\n      data: stats[1].base_stat,\n    },\n    {\n      name: 'Defense',\n      data: stats[2].base_stat,\n    },\n    {\n      name: 'Sp. Att.',\n      data: stats[3].base_stat,\n    },\n    {\n      name: 'Sp. Def.',\n      data: stats[4].base_stat,\n    },\n    {\n      name: 'Speed',\n      data: stats[5].base_stat,\n    },\n  ]\n\n  return (\n    <>\n      <BarChart\n        width={400}\n        height={300}\n        data={data}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 0,\n          bottom: 5,\n        }}\n        barSize={20}\n      >\n        <XAxis dataKey='name' scale='point' padding={{ left: 20, right: 20 }} />\n        <YAxis />\n        <Tooltip />\n\n        <CartesianGrid strokeDasharray='3 3' />\n        <Bar dataKey='data' fill='#3f51b5' background={{ fill: '#f3f3f3' }} />\n      </BarChart>\n    </>\n  )\n}\n\nexport default Chart\n","import { Grid, makeStyles, Typography } from '@material-ui/core'\nimport React from 'react'\nimport useToUpperCaseFirstLetter from '../hooks/useToUpperCaseFirstLetter'\n\nconst useStyles = makeStyles((theme) => ({\n  componentWrapper: {\n    maxHeight: 300,\n    backgroundColor: theme.palette.primary.main,\n    padding: 20,\n    borderRadius: 15,\n  },\n  headerStyles: {\n    color: '#f3f3f3',\n  },\n}))\n\ninterface Props {\n  height: number\n  weight: number\n  abilities: string\n  habitat: {\n    name: string\n  }\n}\n\nconst PokemonStats: React.FC<Props> = ({ height, weight, abilities, habitat }) => {\n  const data = [\n    {\n      name: 'Height',\n      value: height,\n    },\n    {\n      name: 'Weight',\n      value: weight,\n    },\n    {\n      name: 'Ability',\n      value: abilities,\n    },\n    {\n      name: 'Habitat',\n      value: habitat.name,\n    },\n  ]\n\n  const classes = useStyles()\n\n  const upperCaseFirstLetter = useToUpperCaseFirstLetter()\n\n  return (\n    <Grid className={classes.componentWrapper} item container>\n      {data.map(({ name, value }) => (\n        <Grid key={name} xs={6} item>\n          <Typography className={classes.headerStyles} align='center' variant='h6'>\n            {name}\n          </Typography>\n          <Typography align='center' variant='h6'>\n            {typeof value === 'string' ? upperCaseFirstLetter(value) : value}\n          </Typography>\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n\nexport default PokemonStats\n","import React from 'react'\nimport { useHistory, useParams } from 'react-router'\n\nimport useFetch from '../hooks/useFetch'\n\nimport Image from 'material-ui-image'\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core'\nimport Chart from '../components/Chart'\nimport PokemonStats from '../components/PokemonStats'\nimport useToUpperCaseFirstLetter from '../hooks/useToUpperCaseFirstLetter'\nimport MUIBackdrop from '../components/MUIBackdrop'\n\nconst useStyles = makeStyles((theme) => ({\n  pageWrapperStyles: {\n    maxWidth: 1360,\n    padding: '0 30px',\n    [theme.breakpoints.up('md')]: {},\n  },\n  imageStyles: {\n    width: 300,\n    height: 300,\n    margin: '30px auto',\n  },\n  marginTop: {\n    marginTop: 30,\n  },\n  marginBottom: {\n    marginBottom: 30,\n  },\n  buttonStyles: {\n    padding: 20,\n    marginTop: 30,\n  },\n}))\n\ninterface Params {\n  id: string\n}\n\ninterface FetchData {\n  name: string\n  sprites: {\n    other: {\n      'official-artwork': {\n        front_default: string\n      }\n    }\n  }\n  types: Array<{\n    type: {\n      name: string\n    }\n  }>\n  stats: [{ base_stat: number }]\n  id: number\n  height: number\n  weight: number\n  abilities: Array<{\n    ability: {\n      name: string\n    }\n  }>\n}\n\ninterface FetchSpeciesData {\n  flavor_text_entries: Array<{\n    flavor_text: string\n  }>\n  habitat: {\n    name: string\n  }\n}\n\nconst SinglePokemonPage: React.FC<{}> = () => {\n  const classes = useStyles()\n  let { id } = useParams<Params>()\n\n  const { push } = useHistory()\n\n  const upperCaseFirstLetter = useToUpperCaseFirstLetter()\n\n  const { data, isLoading, error } = useFetch<FetchData>(`https://pokeapi.co/api/v2/pokemon/${id}`)\n  const { data: speciesData } = useFetch<FetchSpeciesData>(\n    `https://pokeapi.co/api/v2/pokemon-species/${id}`\n  )\n\n  return (\n    <Grid direction='column' alignItems='center' className={classes.pageWrapperStyles} container>\n      {isLoading && <MUIBackdrop open={isLoading} />}\n\n      {error && (\n        <Grid item justify='center' alignItems='center'>\n          <Typography variant='h4'>{error}</Typography>\n        </Grid>\n      )}\n\n      {data !== null && speciesData !== null && !isLoading && (\n        <>\n          <Typography className={classes.marginTop} gutterBottom align='center' variant='h4'>\n            {upperCaseFirstLetter(data.name)}\n          </Typography>\n          <Typography gutterBottom align='center' variant='body1' color='textSecondary'>\n            #{data.id}\n          </Typography>\n\n          <Grid container item justify='center'>\n            <Grid container item md={6} direction='column'>\n              <Grid className={classes.imageStyles} container>\n                <Image\n                  src={data.sprites.other['official-artwork'].front_default}\n                  imageStyle={{\n                    width: 300,\n                    height: 300,\n                  }}\n                />\n              </Grid>\n              <Grid className={classes.marginBottom} justify='center' container>\n                <Chart stats={data.stats} />\n              </Grid>\n            </Grid>\n\n            <Grid\n              className={classes.marginTop}\n              container\n              item\n              sm={10}\n              md={6}\n              direction='column'\n              alignItems='center'\n            >\n              <Typography gutterBottom variant='h6'>\n                {speciesData.flavor_text_entries[3].flavor_text}\n              </Typography>\n\n              <PokemonStats\n                height={data.height}\n                weight={data.weight}\n                abilities={data.abilities[0].ability.name}\n                habitat={speciesData.habitat}\n              />\n\n              <Button\n                className={classes.buttonStyles}\n                variant='outlined'\n                color='secondary'\n                size='large'\n                onClick={() => push('/pokemon')}\n              >\n                Search for another Pokemon\n              </Button>\n            </Grid>\n          </Grid>\n        </>\n      )}\n    </Grid>\n  )\n}\n\nexport default SinglePokemonPage\n"],"sourceRoot":""}