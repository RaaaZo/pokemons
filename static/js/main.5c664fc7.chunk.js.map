{"version":3,"sources":["pages/ErrorPage.tsx","components/Drawer.tsx","components/Navigation.tsx","templates/MainTemplate.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","wrapper","position","left","top","width","height","marginTop","ErrorPage","classes","push","useHistory","Grid","className","container","justify","alignItems","direction","Typography","align","variant","Button","color","size","onClick","theme","drawer","flexShrink","drawerPaper","backgroundColor","drawerHeader","display","mixins","toolbar","justifyContent","listItemStyles","padding","margin","fontWeight","Drawer","open","drawerHandler","anchor","paper","IconButton","fontSize","Divider","List","name","url","map","item","index","ListItem","button","divider","logoStyles","cursor","toolbarStyles","minHeight","menuIconStyles","Navigation","React","useState","setOpen","menuHandler","prevState","AppBar","Toolbar","edge","aria-label","globalStyles","overflowX","paddingBottom","footerStyles","bottom","linkStyles","zIndex","StyleTemplate","children","Paper","CssBaseline","Link","href","target","rel","HomePage","lazy","SinglePokemonPage","PokemonPage","App","basename","process","fallback","CircularProgress","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c664fc7.chunk.js","sourcesContent":["import { Button, Grid, makeStyles, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { useHistory } from 'react-router'\n\nconst useStyles = makeStyles({\n  wrapper: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n  },\n  marginTop: {\n    marginTop: 40,\n  },\n})\n\nconst ErrorPage = () => {\n  const classes = useStyles()\n  const { push } = useHistory()\n\n  return (\n    <Grid\n      className={classes.wrapper}\n      container\n      justify='center'\n      alignItems='center'\n      direction='column'\n    >\n      <Typography align='center' variant='h1'>\n        Page not Found\n      </Typography>\n      <Button\n        className={classes.marginTop}\n        variant='contained'\n        color='secondary'\n        size='large'\n        onClick={() => push('/')}\n      >\n        Go back to home!\n      </Button>\n    </Grid>\n  )\n}\n\nexport default ErrorPage\n","import React from 'react'\n\nimport { Drawer as MUIDrawer } from '@material-ui/core'\nimport Divider from '@material-ui/core/Divider'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport { IconButton, makeStyles } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\n\nconst drawerWidth = 250\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#f3f3f3',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'space-between',\n  },\n  listItemStyles: {\n    padding: '30px',\n    margin: 'auto',\n    justifyContent: 'center',\n    fontWeight: 'bold',\n  },\n}))\n\ninterface Props {\n  open: boolean\n  drawerHandler(): void\n}\n\nconst Drawer: React.FC<Props> = ({ open, drawerHandler }) => {\n  const classes = useStyles()\n  const { push } = useHistory()\n\n  return (\n    <MUIDrawer\n      className={classes.drawer}\n      variant='persistent'\n      anchor='right'\n      open={open}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={drawerHandler}>\n          <ChevronRightIcon fontSize='large' />\n        </IconButton>\n      </div>\n      <Divider />\n\n      <List>\n        {[\n          { name: 'Home', url: '/' },\n          { name: 'Pokemon', url: '/pokemon' },\n        ].map((item, index) => (\n          <ListItem\n            key={index}\n            className={classes.listItemStyles}\n            button\n            divider\n            onClick={() => push(item.url)}\n          >\n            {item.name}\n          </ListItem>\n        ))}\n      </List>\n    </MUIDrawer>\n  )\n}\n\nexport default Drawer\n","import React from 'react'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Drawer from './Drawer'\nimport { Typography } from '@material-ui/core'\nimport { useHistory } from 'react-router'\n\nconst useStyles = makeStyles({\n  logoStyles: {\n    fontWeight: 'bold',\n    cursor: 'pointer',\n  },\n  toolbarStyles: {\n    justifyContent: 'space-between',\n    minHeight: '100px',\n  },\n  menuIconStyles: {\n    width: '50px',\n    height: '50px',\n  },\n})\n\nconst Navigation = () => {\n  const classes = useStyles()\n  const { push } = useHistory()\n  const [open, setOpen] = React.useState(false)\n\n  const menuHandler = (): void => {\n    setOpen((prevState) => !prevState)\n  }\n\n  return (\n    <>\n      <AppBar color='secondary' position='static'>\n        <Toolbar className={classes.toolbarStyles}>\n          <Typography\n            onClick={() => push('/')}\n            className={classes.logoStyles}\n            variant='h4'\n            color='inherit'\n          >\n            PokeDex\n          </Typography>\n\n          <IconButton edge='start' color='inherit' aria-label='menu' onClick={menuHandler}>\n            <MenuIcon className={classes.menuIconStyles} />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer open={open} drawerHandler={menuHandler} />\n    </>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\nimport { CssBaseline, Grid, makeStyles, Link, Paper } from '@material-ui/core'\nimport Navigation from '../components/Navigation'\n\nconst useStyles = makeStyles({\n  globalStyles: {\n    overflowX: 'hidden',\n    backgroundColor: '#f3f3f3',\n    paddingBottom: 40,\n  },\n  footerStyles: {\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    height: 25,\n    backgroundColor: '#f50057',\n    color: '#fff',\n  },\n  linkStyles: {\n    color: '#fff',\n  },\n  paper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#f3f3f3',\n    zIndex: -1,\n  },\n})\n\ninterface Props {\n  children: React.ReactNode\n}\n\nconst StyleTemplate: React.FC<Props> = ({ children }) => {\n  const classes = useStyles()\n  return (\n    <Grid className={classes.globalStyles} container>\n      <Paper className={classes.paper} />\n      <CssBaseline />\n      <Navigation />\n      {children}\n      <Grid className={classes.footerStyles} justify='center' alignItems='center' container>\n        <Link\n          className={classes.linkStyles}\n          href='https://github.com/'\n          target='_blank'\n          rel='noreferrer'\n        >\n          Mateusz Koprowicz\n        </Link>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default StyleTemplate\n","import { CircularProgress } from '@material-ui/core'\nimport React, { Suspense } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport ErrorPage from './pages/ErrorPage'\n\nimport StyleTemplate from './templates/MainTemplate'\n\nconst HomePage = React.lazy(() => import('./pages/HomePage'))\nconst SinglePokemonPage = React.lazy(() => import('./pages/SinglePokemonPage'))\nconst PokemonPage = React.lazy(() => import('./pages/PokemonPage'))\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <StyleTemplate>\n        <Suspense fallback={<CircularProgress />}>\n          <Switch>\n            <Route exact path='/' component={HomePage} />\n            <Route path='/pokemon/:id' component={SinglePokemonPage} />\n            <Route path='/pokemon' component={PokemonPage} />\n            <Route component={ErrorPage} />\n          </Switch>\n        </Suspense>\n      </StyleTemplate>\n    </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}