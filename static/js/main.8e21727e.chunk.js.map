{"version":3,"sources":["components/Drawer.tsx","components/Navigation.tsx","templates/MainTemplate.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","drawer","width","flexShrink","drawerPaper","backgroundColor","drawerHeader","display","alignItems","mixins","toolbar","justifyContent","listItemStyles","padding","margin","fontWeight","Drawer","open","drawerHandler","classes","push","useHistory","className","variant","anchor","paper","IconButton","onClick","fontSize","Divider","List","name","url","map","item","index","ListItem","button","divider","logoStyles","cursor","toolbarStyles","minHeight","menuIconStyles","height","Navigation","React","useState","setOpen","menuHandler","prevState","AppBar","color","position","Toolbar","Typography","edge","aria-label","globalStyles","overflowX","paddingBottom","footerStyles","bottom","left","linkStyles","top","zIndex","StyleTemplate","children","Grid","container","Paper","CssBaseline","justify","Link","href","target","rel","HomePage","lazy","SinglePokemonPage","PokemonPage","App","basename","process","fallback","CircularProgress","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e21727e.chunk.js","sourcesContent":["import React from 'react'\n\nimport { Drawer as MUIDrawer } from '@material-ui/core'\nimport Divider from '@material-ui/core/Divider'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport { IconButton, makeStyles } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\n\nconst drawerWidth = 250\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#f3f3f3',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'space-between',\n  },\n  listItemStyles: {\n    padding: '30px',\n    margin: 'auto',\n    justifyContent: 'center',\n    fontWeight: 'bold',\n  },\n}))\n\ninterface Props {\n  open: boolean\n  drawerHandler(): void\n}\n\nconst Drawer: React.FC<Props> = ({ open, drawerHandler }) => {\n  const classes = useStyles()\n  const { push } = useHistory()\n\n  return (\n    <MUIDrawer\n      className={classes.drawer}\n      variant='persistent'\n      anchor='right'\n      open={open}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={drawerHandler}>\n          <ChevronRightIcon fontSize='large' />\n        </IconButton>\n      </div>\n      <Divider />\n\n      <List>\n        {[\n          { name: 'Home', url: '/' },\n          { name: 'Pokemon', url: '/pokemon' },\n        ].map((item, index) => (\n          <ListItem\n            key={index}\n            className={classes.listItemStyles}\n            button\n            divider\n            onClick={() => push(item.url)}\n          >\n            {item.name}\n          </ListItem>\n        ))}\n      </List>\n    </MUIDrawer>\n  )\n}\n\nexport default Drawer\n","import React from 'react'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Drawer from './Drawer'\nimport { Typography } from '@material-ui/core'\nimport { useHistory } from 'react-router'\n\nconst useStyles = makeStyles({\n  logoStyles: {\n    fontWeight: 'bold',\n    cursor: 'pointer',\n  },\n  toolbarStyles: {\n    justifyContent: 'space-between',\n    minHeight: '100px',\n  },\n  menuIconStyles: {\n    width: '50px',\n    height: '50px',\n  },\n})\n\nconst Navigation = () => {\n  const classes = useStyles()\n  const { push } = useHistory()\n  const [open, setOpen] = React.useState(false)\n\n  const menuHandler = (): void => {\n    setOpen((prevState) => !prevState)\n  }\n\n  return (\n    <>\n      <AppBar color='secondary' position='static'>\n        <Toolbar className={classes.toolbarStyles}>\n          <Typography\n            onClick={() => push('/')}\n            className={classes.logoStyles}\n            variant='h4'\n            color='inherit'\n          >\n            PokeDex\n          </Typography>\n\n          <IconButton edge='start' color='inherit' aria-label='menu' onClick={menuHandler}>\n            <MenuIcon className={classes.menuIconStyles} />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer open={open} drawerHandler={menuHandler} />\n    </>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\nimport { CssBaseline, Grid, makeStyles, Link, Paper } from '@material-ui/core'\nimport Navigation from '../components/Navigation'\n\nconst useStyles = makeStyles({\n  globalStyles: {\n    overflowX: 'hidden',\n    backgroundColor: '#f3f3f3',\n    paddingBottom: 40,\n  },\n  footerStyles: {\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    height: 25,\n    backgroundColor: '#f50057',\n    color: '#fff',\n  },\n  linkStyles: {\n    color: '#fff',\n  },\n  paper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#f3f3f3',\n    zIndex: -1,\n  },\n})\n\ninterface Props {\n  children: React.ReactNode\n}\n\nconst StyleTemplate: React.FC<Props> = ({ children }) => {\n  const classes = useStyles()\n  return (\n    <Grid className={classes.globalStyles} container>\n      <Paper className={classes.paper} />\n      <CssBaseline />\n      <Navigation />\n      {children}\n      <Grid className={classes.footerStyles} justify='center' alignItems='center' container>\n        <Link\n          className={classes.linkStyles}\n          href='https://github.com/'\n          target='_blank'\n          rel='noreferrer'\n        >\n          Mateusz Koprowicz\n        </Link>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default StyleTemplate\n","import { CircularProgress } from '@material-ui/core'\nimport React, { Suspense } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport StyleTemplate from './templates/MainTemplate'\n\nconst HomePage = React.lazy(() => import('./pages/HomePage'))\nconst SinglePokemonPage = React.lazy(() => import('./pages/SinglePokemonPage'))\nconst PokemonPage = React.lazy(() => import('./pages/PokemonPage'))\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <StyleTemplate>\n        <Suspense fallback={<CircularProgress />}>\n          <Switch>\n            <Route exact path='/' component={HomePage} />\n            <Route path='/pokemon/:id' component={SinglePokemonPage} />\n            <Route path='/pokemon' component={PokemonPage} />\n          </Switch>\n        </Suspense>\n      </StyleTemplate>\n    </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}